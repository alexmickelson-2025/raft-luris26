services:
  node1:
    build:
      context: .
      dockerfile: dev.Dockerfile
    working_dir: /app
    user: 1000:100
    volumes:
      - ./:/app
    environment:
      - NODE_ID=1
      - OTHER_NODES=2,http://node2:8080;3,http://node3:8080
      - NODE_INTERVAL_SCALAR=50
    command: dotnet watch --project RaftRestApi
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 3s
  node2:
    build:
      context: .
      dockerfile: dev.Dockerfile
    working_dir: /app
    user: 1000:100
    volumes:
      - ./:/app
    environment:
      - NODE_ID=2
      - OTHER_NODES=1,http://node1:8080;3,http://node3:8080
      - NODE_INTERVAL_SCALAR=50
    command: dotnet watch --project RaftRestApi
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 3s
  node3:
    build:
      context: .
      dockerfile: dev.Dockerfile
    working_dir: /app
    user: 1000:100
    volumes:
      - ./:/app
    environment:
      - NODE_ID=3
      - OTHER_NODES=1,http://node1:8080;2,http://node2:8080
      - NODE_INTERVAL_SCALAR=50
    command: dotnet watch --project RaftRestApi
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 3s